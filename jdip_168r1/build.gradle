apply plugin: 'java'
apply plugin: 'application'



repositories {

    jcenter()
}

version='1.8.0-SNAPSHOT'

dependencies {

    def batikVersion = '1.6'
    def batikGroup = 'batik'
    compile group: batikGroup, name: 'batik-util', version: batikVersion
    compile group: batikGroup, name: 'batik-bridge', version: batikVersion
    compile group: batikGroup, name: 'batik-svg-dom', version: batikVersion
    compile group: batikGroup, name: 'batik-svg-dom', version: batikVersion
    compile group: batikGroup, name: 'batik-ext', version: batikVersion
    compile group: batikGroup, name: 'batik-swing', version: batikVersion
    compile group: batikGroup, name: 'batik-transcoder', version: batikVersion
    compile group: batikGroup, name: 'batik-parser', version: batikVersion
    compile group: batikGroup, name: 'batik-gvt', version: batikVersion
    compile group: batikGroup, name: 'batik-dom', version: batikVersion
    compile group: batikGroup, name: 'batik-css', version: batikVersion
    compile group: batikGroup, name: 'batik-script', version: batikVersion
    compile group: batikGroup, name: 'batik-xml', version: batikVersion
    compile group: batikGroup, name: 'batik-extension', version: batikVersion
    runtime group: batikGroup, name: 'batik-awt-util', version: batikVersion

    // https://mvnrepository.com/artifact/com.github.w1tebear/jcmdline
    compile group: 'com.github.w1tebear', name: 'jcmdline', version: '2.0.1'

    // https://mvnrepository.com/artifact/com.l2fprod.common/l2fprod-common-directorychooser
    compile group: 'com.l2fprod.common', name: 'l2fprod-common-directorychooser', version: '6.9.1'
    // https://mvnrepository.com/artifact/javax.help/javahelp
    compile group: 'javax.help', name: 'javahelp', version: '2.0.05'
// https://mvnrepository.com/artifact/org.apache.xmlgraphics/fop
    compile group: 'org.apache.xmlgraphics', name: 'fop', version: '1.0'
    compile group: 'com.jgoodies', name: 'looks', version: '2.2.2'

    // Add all the jar dependencies from the lib folder.
    compile fileTree(dir: 'lib', include: ['*.jar'])

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'
    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


}

test {
    useJUnitPlatform()
}

file('resource/variants').eachDir { dir ->
    def taskName = "${dir.name}Variants"
    def task = tasks.create(name: taskName, type: Zip) {
        archiveName = taskName+".zip"
        from fileTree(dir)
        destinationDir file("build/tmp/variants")
        group='variants'
        description= "Builds the $archiveName."
    }
    test.dependsOn(task)
    run.dependsOn(task)

}
file('resource/symbols').eachDir { dir ->
    def taskName = "${dir.name}Symbols"
    def task = tasks.create(name: taskName, type: Zip) {
        archiveName = taskName+".zip"
        from fileTree(dir)
        destinationDir file("build/tmp/variants")
        group='variants'
        description= "Builds the $archiveName."

    }
    test.dependsOn(task)
    run.dependsOn(task)
}


mainClassName = 'info.jdip.gui.splash'

distributions {
    main {
        baseName = "jdip"
        contents{
            tasks.each {
                task ->
                    if (task.group == 'variants') {
                        from(task){
                            into 'variants'
                        }
                    }
            }

            from('.') {
                include 'README.TXT'
                include 'LICENSE.TXT'
                include 'HISTORY.TXT'
                include 'CHANGELOG.TXT'
            }
        }
    }
}

run{
    workingDir("build/tmp")
}






Bugs to be fixed
======================================================
	
			
	*** on final release
		- mailing list (jdip-users & dev)
		- web site (of course)
		- rec.games.dip
		- web site : 
			make sure link to java install is OK
			
	0) make the 'maptool' plugin available for download
		under 'jdip-tools'
		
		
	1) NSIS installer....
		DONE java check / install
		DONE enable LZMA
		DONE nicer java check page
		
		ensure we have launch4j script / settings in etc/ on release
		and instructions for making the NSIS installer
		
		improve .ico file
			multiple resolution icons 16, 32, 64 pixels
			
			http://www.axiomx.com/PixelToolbox/
			
			
BUGS / TODO
-----------
	2) KNOWN ISSUES: (add...)
			cannot import games using by-5 (some hundred games)
			e.g.: USDP / hundredwar25
			Phase A1424M is not recognized
	3) KNOWN ISSUES: 
			proxy / firewall
			workaround
			no change until 1.5
	3) Thread bug
		NullPointerException	
		dip.gui.ClientFrame$MenuHandler.onFileNewStd(ClientFrame.java:1283)
		dip.gui.PersistenceManager.newGame(PersistenceManager.java:301)
		dip.gui.dialog.newgame.NewGameDialog.displayDialog(NewGameDialog.java:78)
		dip.gui.dialog.newgame.NewGameDialog.displayDialog(NewGameDialog.java:96)
			we create the dialog, but it's not ready yet. so we get an NPE here.
			this is with 1.4.2_05-b04 / xp / 5.1 
	4) NEW BUG:
		Brief: java.io.IOException: Cannot validate order on second pass.
		Cannot build a new unit where a unit already exists.		
		
		error importing: DEUS / npst336		(no world open)
		error importing: USIN / vgnp3078		(world open)
	9)	NO variants exception (on linux...)
		
		No variants found on path: /home/USERNAME/variants; <br>
		No variants found on path: /home/USERNAME/variants; <br>
		
		"user.dir" = user's current working directory
		"user.home" = user's home directory
		
		** REALLY, we should use 'user.home'
			'user.dir' : init at JVM startup
			'user.home' : user home directory
			
		determine HOW we are finding user home directory
		program home directory
		etc.
		
		CURRENT CODE
		============
		if(System.getProperty("user.dir") == null)
		{
			variantDirPath = (variantDirPath == null) ? new File(".", VARIANT_DIR) : variantDirPath;
			toolDirPath = new File(".", TOOL_DIR);
		}
		else
		{
			variantDirPath = (variantDirPath == null) ? new File(System.getProperty("user.dir"), VARIANT_DIR) : variantDirPath;
			toolDirPath = new File(System.getProperty("user.dir"), TOOL_DIR );
		}
		
		HERE is how jEdit does it:
		http://cvs.sourceforge.net/viewcvs.py/jedit/jEdit/installer/OperatingSystem.java?rev=1.19&view=auto
		=========================
		(after checking for UNIX)
		
		String dir = "/usr/local/share/";
		if(!new File(dir).canWrite())
			dir = System.getProperty("user.home");
		return new File(dir,name.toLowerCase() + "/" + version).getPath();
		
		String dir = "/usr/local/";
		if(!new File(dir).canWrite())
			dir = System.getProperty("user.home");
		
		return new File(dir,"bin").getPath();

		SOLUTION
		========
			MacOS and Windows
				leave as-is; appears to work OK
			Unix/Linux
				use "user.home"
				
				make sure installer knows this?
				first:
					try to install to /usr/local/share/
					
				
				
		TO INVESTIGATE:
		==============
			See how other programs with 'plugins' do it:
				Eclipse
				
				Azureus
					org.gudy.azureus2.pluginsimpl.local.PluginInitializer
				finds directories in
					File	user_dir = FileUtil.getUserFile("plugins");
					File	app_dir	 = FileUtil.getApplicationFile("plugins");
				
				org.gudy.azureus2.core3.util.FileUtil;
				org.gudy.azureus2.core3.util.SystemProperties;
				
					public static File getUserFile(String filename)
					{
						return new File(SystemProperties.getUserPath(), filename);
					}
					
					public static File getApplicationFile(String filename)
					{
						String path = SystemProperties.getApplicationPath();
						  
						  if(Constants.isOSX) {
							path = path + "/Azureus.app/Contents/";
						  }
						  
						  return new File(path, filename);
					}
	


FUTURE FEATURES
===============
	a) 'check for new JEdit version'
		if so, display changes in a nonmodal dialog
		allow user to point browser to download site
	
	b) Mac OS X Integration issues:
		http://today.java.net/pub/a/today/2003/12/08/swing.html
		http://today.java.net/pub/a/today/2004/01/05/swing.html?page=2
		http://java.sun.com/developer/technicalArticles/JavaLP/JavaToMac/
			a) file-type associations for os x
				1) REQUIRES: custom listener using com.mac.* package
				2) REQUIRES: 'plist' file (from installer / app bundle)
			b) menu type application things
				To set the name of our application, and have it appear at the top of the application menu, 
				we use another system property, 
					com.apple.mrj.application.apple.menu.about.name
				You can put this on the command line with another -D argument. If you're using the
				Project Builder IDE, you'll want to put all of these Java system properties in your Info.plist file, 
				where they'll look like this:
				
				com.apple.mrj.application.growbox.intrudes=true
		
	c) Java 5: 
		use proxy if needed for web requests!
				ProxySelector.getDefault()
			THIS IS THE BEST METHOD
		Proxy(Proxy.Type type, SocketAddress sa) 
			Proxy.Type:
				HTTP
				SOCKS
				DIRECT (no proxy)
				
				


PERHAPS call next version 1.7.0 (when released)?

jDip TODO list
==============


Cannot duplicate
======================================================
- [1051166] copying orders to clipboard
  <HTML> is inserted in front of each line. 
  we should use plain text.
  *** CANNOT DUPLICATE on JDK 1.4.2 or 1.5.0
  
- [1116567 ] Map->Jpeg exports
  *** CANNOT DUPLICATE on JDK 1.4.2 or 1.5.0
  
- [1084155] Errors in enter multiple orders breaks menu
  *** CANNOT DUPLICATE on JDK 1.4.2 or 1.5.0


Bugs to be fixed
======================================================
		
	1) maps / symbols
		ancmed:
			should now be fixed
		
		fix ancmed units
			dislodged units are not correct
			
		aberrationV
			stefano
			a) FIX order symbols
			b) FIX unit positions
			
	2) update help text
		add changelog, when complete
		TEST
		
	3)  Menu doesn't match preferences for province-naming
	  	e.g.: menu for province names lists 'none' if prefs
		set to 'brief' names, and brief names are showing.
		use 16_17 branch code
		975594 / 1015353 ] Province Names and Order Sorting not retained
		is related
	 
	4)	Judge Importing failures
		MOSTLY fixed...
		
		test judge importing into existing games
		see what we can do about that
		the current fix for general import may have broken that....
		
		if we are importing into an existing game:
		
		1) note last phase of existing game
		2) ignore importing upto that phase OR start importing from that
			phase...
		3) or check judge position/orders against existing phase orders
		 	to make sure we are OK
			
		perhaps: import (as a new game) then game is merged
		
		
	6)	Mac OS X Issue ? 
		** NEED MAC TESTING: mac os x : native file chooser used (FileDialog)
		
	7) BugReport:
		need to report if we are webstart version or not
	
	8)	Windows
		would be nice if we could do file associations....
			1) double click on .jdip file opens in jdip
			2) jdip command line opens jdip file
			3) enable this in webstart (1.5.x)
				    <association>
					  <mime-type="application-x/swingset2-file"/>
					  <extensions="swingset2"/> 
					</association>
					<related-content>
				see:
					http://java.sun.com/j2se/1.5.0/docs/guide/javaws/developersguide/syntax.html#application_desc
				
				see:
					http://today.java.net/pub/a/today/2004/01/05/swing.html?page=3
				installer will need to do this 
				.jar installer (w/special instructions on windows)
					http://openfacts.berlios.de/index-en.phtml?title=IzPack/ScriptExamples/Creating_File_Associations_in_Windows_XP/2000
				.exe installer (windows-only)
					CANNOT do it with installshield
					look into NSIS installer.....
					
					
				create a simple NSIS installer:
					installs a single file
					creates registry keys
					does a java install (online)
					
				
	9)	NO variants exception (on linux...)
		
		No variants found on path: /home/USERNAME/variants; <br>
		No variants found on path: /home/USERNAME/variants; <br>
		
		"user.dir" = user's current working directory
		"user.home" = user's home directory
		
		** REALLY, we should use 'user.home'
			'user.dir' : init at JVM startup
			'user.home' : user home directory
			
		determine HOW we are finding user home directory
		program home directory
		etc.
		
		CURRENT CODE
		============
		if(System.getProperty("user.dir") == null)
		{
			variantDirPath = (variantDirPath == null) ? new File(".", VARIANT_DIR) : variantDirPath;
			toolDirPath = new File(".", TOOL_DIR);
		}
		else
		{
			variantDirPath = (variantDirPath == null) ? new File(System.getProperty("user.dir"), VARIANT_DIR) : variantDirPath;
			toolDirPath = new File(System.getProperty("user.dir"), TOOL_DIR );
		}
		
		HERE is how jEdit does it:
		http://cvs.sourceforge.net/viewcvs.py/jedit/jEdit/installer/OperatingSystem.java?rev=1.19&view=auto
		=========================
		(after checking for UNIX)
		
		String dir = "/usr/local/share/";
		if(!new File(dir).canWrite())
			dir = System.getProperty("user.home");
		return new File(dir,name.toLowerCase() + "/" + version).getPath();
		
		String dir = "/usr/local/";
		if(!new File(dir).canWrite())
			dir = System.getProperty("user.home");
		
		return new File(dir,"bin").getPath();

		SOLUTION
		========
			MacOS and Windows
				leave as-is; appears to work OK
			Unix/Linux
				use "user.home"
				
		TO INVESTIGATE:
		==============
			See how other programs with 'plugins' do it:
				Eclipse
				
				Azureus
					org.gudy.azureus2.pluginsimpl.local.PluginInitializer
				finds directories in
					File	user_dir = FileUtil.getUserFile("plugins");
					File	app_dir	 = FileUtil.getApplicationFile("plugins");
				
				org.gudy.azureus2.core3.util.FileUtil;
				org.gudy.azureus2.core3.util.SystemProperties;
				
					public static File getUserFile(String filename)
					{
						return new File(SystemProperties.getUserPath(), filename);
					}
					
					public static File getApplicationFile(String filename)
					{
						String path = SystemProperties.getApplicationPath();
						  
						  if(Constants.isOSX) {
							path = path + "/Azureus.app/Contents/";
						  }
						  
						  return new File(path, filename);
					}
	
	*** MISC ISSUES
		http://today.java.net/pub/a/today/2003/12/08/swing.html
		http://today.java.net/pub/a/today/2004/01/05/swing.html?page=2
		http://java.sun.com/developer/technicalArticles/JavaLP/JavaToMac/
			a) file-type associations for os x
				1) REQUIRES: custom listener using com.mac.* package
				2) REQUIRES: 'plist' file (from installer / app bundle)
			b) menu type application things
				To set the name of our application, and have it appear at the top of the application menu, 
				we use another system property, 
					com.apple.mrj.application.apple.menu.about.name
				You can put this on the command line with another -D argument. If you're using the
				Project Builder IDE, you'll want to put all of these Java system properties in your Info.plist file, 
				where they'll look like this:
				
				com.apple.mrj.application.growbox.intrudes=true


	
		
		
		
	
				
Installer
======================================================
	
Would be nice to replace current windows installer with
an NSIS-based installer. 

We could include the 'online java installer' as well.

The installer would:
	a) check for Java; install (after prompting user) 
		if user's java version is < minimum-required version
		(that would be 1.4); if user says no, install quits
		
	b) if user java version >= 1.4 but <= 1.5.x, prompt for
		java update (to the newer version)
		if user cancels, we can still install
	
	c) then install jDip. 


FUTURE FEATURE
==============
	6) 'check for new JEdit version'
		if so, display changes in a nonmodal dialog
		allow user to point browser to download site
	
